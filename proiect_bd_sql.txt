create table tara
(
id_tara number(5),
nume varchar(25) constraint nume_tara_nn not null,
unique (nume)
);
alter table tara
add constraint id_tara_pk primary key(id_tara);

create table oras 
(
id_oras number(5),
nume varchar(25) constraint nume_oras_nn not null,
id_tara number(5),
unique (nume)
);
alter table oras
add constraint id_oras_pk primary key(id_oras);
alter table oras
add constraint id_tara_fk foreign key(id_tara) references tara(id_tara);

create table centru_de_adoptie
(
id_centru number(5),
nume varchar(50) constraint nume_centru_nn not null,
data_aparitie date constraint aparitie_nn not null,
nr_animale_adoptate number(10),
id_oras number(5),
unique (nume)
);
alter table centru_de_adoptie
add constraint id_centru_pk primary key(id_centru);
alter table centru_de_adoptie
add constraint id_oras_fk foreign key(id_oras) references oras(id_oras);

create table hrana_animale
(
id_hrana number(5),
nume varchar(30) constraint nume_hrana_nn not null,
cantitate number(3) constraint cantitate_hrana_nn not null,
id_centru number(5),
constraint id_hrana_pk primary key(id_hrana),
constraint id_centru_fk foreign key(id_centru) references centru_de_adoptie(id_centru)
);

create table animal
(
id_animal number(5),
nume_rasa varchar(25),
varsta number(3) constraint varsta_animal_nn not null,
nume varchar(25),
id_centru number(5),
pedigree varchar(10) constraint pedigree_nn not null,
constraint id_animal_pk primary key(id_animal),
constraint id_centru_2_fk foreign key(id_centru) references centru_de_adoptie(id_centru),
constraint pedigree_a check (pedigree='are' or pedigree='nu are')
);

create table vaccin 
(
id_vaccin number(5),
nume varchar(30) constraint nume_vaccin_nn not null,
data_administrare date constraint data_vaccin_nn not null,
id_animal number(5),
constraint id_vaccin_pk primary key(id_vaccin),
constraint id_animal_fk foreign key(id_animal) references animal(id_animal)
);

create table carnet_vaccinuri
(
id_carnet number(5),
id_animal number(5),
id_vaccin number(5),
nr_vaccinuri number(2) constraint nr_vaccinuri_nn not null,
data_urmatorului_vaccin date,
constraint pk_carnet_animal_vaccin primary key(id_carnet, id_animal, id_vaccin),
constraint id_animal_2_fk foreign key (id_animal) references animal (id_animal),
constraint id_vaccin_fk foreign key (id_vaccin) references vaccin (id_vaccin)
);

create table boala
(
id_boala number(5),
nume varchar(30) constraint nume_boala_nn not null,
gravitate number(2) constraint gravitate_boala_nn not null,
constraint id_boala_pk primary key (id_boala)
);


create table medicament 
(
id_medicament number(5),
nume varchar(30) constraint nume_medicament_nn not null,
doza_pe_zi number(2) constraint doza_medicament_nn not null,
constraint id_medicament_pk primary key (id_medicament)
);

create table personal
(
id_personal number(5),
nr_angajati number(4) constraint nr_angajati_nn not null,
salariu_minim number(5) constraint sal_min_p_nn not null,
salariu_maxim number(5) constraint sal_max_p_nn not null,
id_centru number(5),
constraint id_personal_pk primary key (id_personal),
constraint id_centru_3_fk foreign key (id_centru) references centru_de_adoptie (id_centru)
);

create table departament 
( 
id_departament number(5),
nume varchar(25) constraint nume_departament_nn not null,
nr_persoane number(3) constraint nr_persoane_d_nn not null,
salariu_minim number(5) constraint sal_min_d_nn not null,
salariu_maxim number(5) constraint sal_max_d_nn not null,
id_personal number(5),
constraint id_departament_pk primary key (id_departament),
constraint id_personal_fk foreign key (id_personal) references personal (id_personal)
);

create table job
(
id_job number(5),
nume varchar(30) constraint nume_job_nn not null,
salariu number(5) constraint salariu_job_nn not null,
id_departament number(5),
constraint id_job_pk primary key (id_job),
constraint id_departament_fk foreign key (id_departament) references departament (id_departament)
);

create table angajat
(
id_angajat number(5),
nume varchar(30) constraint nume_angajat_nn not null,
prenume varchar(30) constraint prenume_angajat_nn not null,
varsta number(2) constraint varsta_angajat_nn not null,
data_nasterii date constraint data_angajat_nn not null,
salariu number(5) constraint salariu_angajat_nn not null,
id_job number(5),
constraint id_angajat_pk primary key(id_angajat),
constraint id_job_fk foreign key(id_job) references job (id_job)
);

create table sufera 
(
id_animal number(5),
id_boala number(5), 
constraint pk_animal_boala primary key (id_animal, id_boala),
constraint id_animal_4_fk foreign key (id_animal) references animal(id_animal),
constraint id_boala_2_fk foreign key (id_boala) references boala (id_boala)
);

create table se_treateaza 
(
id_boala number(5),
id_medicament number(5),
constraint pk_boala_medicament primary key (id_boala, id_medicament),
constraint id_boala_3_fk foreign key (id_boala) references boala (id_boala),
constraint id_medicament_fk foreign key (id_medicament) references medicament(id_medicament)
);

create table mananca
(
id_animal number(5),
id_hrana number(5), 
constraint pk_animal_hrana primary key (id_animal, id_hrana),
constraint id_animal_5_fk foreign key (id_animal) references animal(id_animal),
constraint id_hrana_2_fk foreign key (id_hrana) references hrana_animale (id_hrana)
);

ex 13.
create sequence seq_tara
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into tara
values(seq_tara.nextval, 'Romania');

insert into tara
values(seq_tara.nextval, 'Franta');

insert into tara
values(seq_tara.nextval, 'Germania');

insert into tara
values(seq_tara.nextval, 'Italia');

insert into tara
values(seq_tara.nextval, 'Bulgaria');

insert into tara
values(seq_tara.nextval, 'Ucraina');

insert into tara
values(seq_tara.nextval, 'Spania');

insert into tara
values(seq_tara.nextval, 'Ungaria');

insert into tara
values(seq_tara.nextval, 'Polonia');

insert into tara
values(seq_tara.nextval, 'Danemarca');

commit;

create sequence seq_oras
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into oras
values(seq_oras.nextval, 'Constanta', 1);

insert into oras
values(seq_oras.nextval, 'Craiova', 1);

insert into oras
values(seq_oras.nextval, 'Roma', 4);

insert into oras
values(seq_oras.nextval, 'Barcelona', 7);

insert into oras
values(seq_oras.nextval, 'Navodari', 1);

insert into oras
values(seq_oras.nextval, 'Bucuresti', 1);

insert into oras
values(seq_oras.nextval, 'Verona', 4);

insert into oras
values(seq_oras.nextval, 'Timisoara', 1);

insert into oras
values(seq_oras.nextval, 'Alba-Iulia', 1);

insert into oras
values(seq_oras.nextval, 'Iasi', 1);

commit;


create sequence seq_centru
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into centru_de_adoptie
values(seq_centru.nextval, 'Animalutele fericite', TO_DATE('12-03-2004', 'dd-mm-yyyy'), 100, 2);

insert into centru_de_adoptie
values(seq_centru.nextval, 'Adopta un prieten', TO_DATE('02-11-2010', 'dd-mm-yyyy'), 150, 6);

insert into centru_de_adoptie
values(seq_centru.nextval, 'Animalul tau', TO_DATE('25-06-2012', 'dd-mm-yyyy'), 98, 10);

insert into centru_de_adoptie
values(seq_centru.nextval, 'Adopta-ma!', TO_DATE('16-09-2006', 'dd-mm-yyyy'), 200, 4);

insert into centru_de_adoptie
values(seq_centru.nextval, 'Animale prietenoase', TO_DATE('05-10-2013', 'dd-mm-yyyy'), 59, 5);

insert into centru_de_adoptie
values(seq_centru.nextval, 'Animalutele fericite', TO_DATE('12-03-2004', 'dd-mm-yyyy'), 100, 2);

commit;


create sequence seq_hrana
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into hrana_animale
values(seq_hrana.nextval, 'Chonk', 300, 1);

insert into hrana_animale
values(seq_hrana.nextval, 'Cocomel', 579, 2);

insert into hrana_animale
values(seq_hrana.nextval, 'Papbun', 400, 3);

insert into hrana_animale
values(seq_hrana.nextval, 'Falrel', 280, 4);

insert into hrana_animale
values(seq_hrana.nextval, 'Varel', 600, 5);

insert into hrana_animale
values(seq_hrana.nextval, 'Chonk', 250, 2);

insert into hrana_animale
values(seq_hrana.nextval, 'Chonk', 190, 5);

insert into hrana_animale
values(seq_hrana.nextval, 'Cocomel', 398, 1);

insert into hrana_animale
values(seq_hrana.nextval, 'Cocomel', 400, 4);

insert into hrana_animale
values(seq_hrana.nextval, 'Varel', 387, 3);

insert into hrana_animale
values(seq_hrana.nextval, 'Papbun', 376, 1);

insert into hrana_animale
values(seq_hrana.nextval, 'Falrel', 578, 5);

commit;


create sequence seq_animal
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into animal
values(seq_animal.nextval, 'British', 3, 'Mimi', 2, 'are');

insert into animal
values(seq_animal.nextval, 'Scotish', 1, 'Misha', 5, 'nu are');

insert into animal
values(seq_animal.nextval, 'nu stim', 2, 'Cara', 4,'nu are');

insert into animal
values(seq_animal.nextval, 'Labrador', 4, 'Rex', 1,'are');

insert into animal
values(seq_animal.nextval, 'Pug', 1, 'Boni', 3,'nu are');

commit;


create sequence seq_vaccin
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into vaccin
values(seq_vaccin.nextval, 'Eurican', TO_DATE('12-04-2005', 'dd-mm-yyyy'),1);

insert into vaccin
values(seq_vaccin.nextval, 'Rabisim', TO_DATE('04-03-2010', 'dd-mm-yyyy'),2);

insert into vaccin
values(seq_vaccin.nextval, 'Purevax', TO_DATE('24-11-2006', 'dd-mm-yyyy'),3);

insert into vaccin
values(seq_vaccin.nextval, 'Primodog', TO_DATE('15-12-2013', 'dd-mm-yyyy'),4);

insert into vaccin
values(seq_vaccin.nextval, 'Eurican', TO_DATE('02-09-2012', 'dd-mm-yyyy'),5);


commit;


create sequence seq_carnet
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into carnet_vaccinuri
values(seq_carnet.nextval, 1, 3, 1, TO_DATE('23-07-2022', 'dd-mm-yyyy'));

insert into carnet_vaccinuri
values(seq_carnet.nextval, 2, 1, 3, TO_DATE('12-09-2022', 'dd-mm-yyyy'));

insert into carnet_vaccinuri
values(seq_carnet.nextval, 3, 5, 6, TO_DATE('15-10-2022', 'dd-mm-yyyy'));

insert into carnet_vaccinuri
values(seq_carnet.nextval, 4, 2, 2, TO_DATE('13-11-2022', 'dd-mm-yyyy'));

insert into carnet_vaccinuri
values(seq_carnet.nextval, 5, 4, 1, TO_DATE('25-08-2022', 'dd-mm-yyyy'));

commit;

create sequence seq_boala
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into boala
values(seq_boala.nextval, 'Parazitoza', 3);

insert into boala
values(seq_boala.nextval, 'Salmoneloza', 6);

insert into boala
values(seq_boala.nextval, 'Stenoza Aortica', 10);

insert into boala
values(seq_boala.nextval, 'Toxopalsmoza', 4);

insert into boala
values(seq_boala.nextval, 'Otita', 5);

commit;


create sequence seq_medicament
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into medicament
values(seq_medicament.nextval, 'Brufil', 3);

insert into medicament
values(seq_medicament.nextval, 'Iosman', 2);

insert into medicament
values(seq_medicament.nextval, 'Calmarin', 1);

insert into medicament
values(seq_medicament.nextval, 'Maldon', 1);

insert into medicament
values(seq_medicament.nextval, 'Aurilo', 2);

commit;


create sequence seq_personal
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into personal
values(seq_personal.nextval, 100, 1300, 3000, 1);

insert into personal
values(seq_personal.nextval, 210, 1250, 2998, 2);

insert into personal
values(seq_personal.nextval, 87, 1100, 2500, 3);

insert into personal
values(seq_personal.nextval, 180, 1400, 3100, 4);

insert into personal
values(seq_personal.nextval, 150, 1247, 2876, 5);

commit;


create sequence seq_departament
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into departament
values(seq_departament.nextval, 'Curatenie',30, 1300, 1400, 1);

insert into departament
values(seq_departament.nextval, 'Curatenie',25, 1250, 1300, 2);

insert into departament
values(seq_departament.nextval, 'Curatenie',15, 1100, 1278, 3);

insert into departament
values(seq_departament.nextval, 'Curatenie',40, 1400, 1500, 4);

insert into departament
values(seq_departament.nextval, 'Curatenie',35, 1247, 1350, 5);

insert into departament
values(seq_departament.nextval, 'Curatenie',30, 1300, 1400, 1);

insert into departament
values(seq_departament.nextval, 'Doctori',50, 2500, 3000, 1);

insert into departament
values(seq_departament.nextval, 'Doctori',100, 2480, 2998, 2);

insert into departament
values(seq_departament.nextval, 'Doctori',45, 2000, 2500, 3);

insert into departament
values(seq_departament.nextval, 'Doctori',68, 2657, 3100, 4);

insert into departament
values(seq_departament.nextval, 'Doctori',48, 2150, 2876, 5);

insert into departament
values(seq_departament.nextval, 'Administratie',20, 1500, 2500, 1);

insert into departament
values(seq_departament.nextval, 'Administratie',85, 1458, 2480, 2);

insert into departament
values(seq_departament.nextval, 'Administratie',27, 1376, 2000, 3);

insert into departament
values(seq_departament.nextval, 'Administratie',72, 2000, 2657, 4);

insert into departament
values(seq_departament.nextval, 'Administratie',67, 1500, 2150, 5);

commit;

create sequence seq_job
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into job
values(seq_job.nextval, 'Ingrijitor animale',1300, 1);

insert into job
values(seq_job.nextval, 'Om de serviciu',1400, 1);

insert into job
values(seq_job.nextval, 'Ingrijitor animale',1250, 2);

insert into job
values(seq_job.nextval, 'Om de serviciu',1300, 2);

insert into job
values(seq_job.nextval, 'Ingrijitor animale',1100, 3);

insert into job
values(seq_job.nextval, 'Om de serviciu',1278, 3);

insert into job
values(seq_job.nextval, 'Ingrijitor animale',1400, 4);

insert into job
values(seq_job.nextval, 'Om de serviciu',1500, 4);

insert into job
values(seq_job.nextval, 'Ingrijitor animale',1247, 5);

insert into job
values(seq_job.nextval, 'Om de serviciu',1350, 5);

insert into job
values(seq_job.nextval, 'Medic veterinar',2500, 6);

insert into job
values(seq_job.nextval, 'Chirurg veterinar',3000, 6);

insert into job
values(seq_job.nextval, 'Medic veterinar',2480, 7);

insert into job
values(seq_job.nextval, 'Chirurg veterinar',2998, 7);

insert into job
values(seq_job.nextval, 'Medic veterinar',2000, 8);

insert into job
values(seq_job.nextval, 'Chirurg veterinar',2500, 8);

insert into job
values(seq_job.nextval, 'Medic veterinar',2657, 9);

insert into job
values(seq_job.nextval, 'Chirurg veterinar',3100, 9);

insert into job
values(seq_job.nextval, 'Medic veterinar',2150, 10);

insert into job
values(seq_job.nextval, 'Chirurg veterinar',2876, 10);

insert into job
values(seq_job.nextval, 'Casier',1500, 11);

insert into job
values(seq_job.nextval, 'Manager',2500, 11);

insert into job
values(seq_job.nextval, 'Casier',1458, 12);

insert into job
values(seq_job.nextval, 'Manager',2480, 12);

insert into job
values(seq_job.nextval, 'Casier',1376, 13);

insert into job
values(seq_job.nextval, 'Manager',2000, 13);

insert into job
values(seq_job.nextval, 'Casier',2000, 14);

insert into job
values(seq_job.nextval, 'Manager',2657, 14);

insert into job
values(seq_job.nextval, 'Casier',1500, 15);

insert into job
values(seq_job.nextval, 'Manager',2150, 15);

commit;


create sequence seq_angajat
increment by 1
start with 1
maxvalue 10000
nocycle;

insert into angajat
values(seq_angajat.nextval, 'Agache','Cosmin', 20,TO_DATE('12-03-2002', 'dd-mm-yyyy'), 1300, 1);

insert into angajat
values(seq_angajat.nextval, 'Popa','Andrei',  35, TO_DATE('09-10-1987', 'dd-mm-yyyy'),1400, 2);

insert into angajat
values(seq_angajat.nextval, 'Marius','Andrei', 48, TO_DATE('10-02-1974', 'dd-mm-yyyy'), 1250, 3);

insert into angajat
values(seq_angajat.nextval, 'Marian','Maria',  40, TO_DATE('20-12-1982', 'dd-mm-yyyy'),1300, 4);

insert into angajat
values(seq_angajat.nextval, 'Coman','Alexandru',  38, TO_DATE('24-06-1984', 'dd-mm-yyyy'),1100, 5);

insert into angajat
values(seq_angajat.nextval, 'Popescu','Alina', 28,TO_DATE('30-09-1994', 'dd-mm-yyyy'), 1278, 6);

insert into angajat
values(seq_angajat.nextval, 'Alexandru','Ion', 50,TO_DATE('14-01-1972', 'dd-mm-yyyy'), 1400, 7);

insert into angajat
values(seq_angajat.nextval, 'Oleanu','Marian', 43,TO_DATE('08-08-1987', 'dd-mm-yyyy'), 1500, 8);

insert into angajat
values(seq_angajat.nextval, 'Cornel','Maria', 35,TO_DATE('24-06-1987', 'dd-mm-yyyy'), 1247, 9);

insert into angajat
values(seq_angajat.nextval, 'Gheorghe','Andrei', 46,TO_DATE('09-06-1976', 'dd-mm-yyyy'), 1350, 10);

insert into angajat
values(seq_angajat.nextval, 'Stoica','Carina', 40, TO_DATE('05-11-1982', 'dd-mm-yyyy'),2500, 11);

insert into angajat
values(seq_angajat.nextval, 'Petru','Matei', 45,TO_DATE('13-05-1977', 'dd-mm-yyyy'), 3000, 12);

insert into angajat
values(seq_angajat.nextval, 'Marius','David', 37,TO_DATE('04-12-1985', 'dd-mm-yyyy'), 2480, 13);

insert into angajat
values(seq_angajat.nextval, 'Ion','Marian', 50,TO_DATE('09-06-1972', 'dd-mm-yyyy'), 2998, 14);

insert into angajat
values(seq_angajat.nextval, 'Cornel','Ionut', 34, TO_DATE('25-10-1988', 'dd-mm-yyyy'),2000, 15);

insert into angajat
values(seq_angajat.nextval, 'Gheorghe','Ana', 39,TO_DATE('29-11-1983', 'dd-mm-yyyy'), 2500, 16);

insert into angajat
values(seq_angajat.nextval, 'Pavel','George', 51, TO_DATE('03-05-1971', 'dd-mm-yyyy'),2657, 17);

insert into angajat
values(seq_angajat.nextval, 'Marius','Ion', 30,TO_DATE('08-12-1992', 'dd-mm-yyyy'), 3100, 18);

insert into angajat
values(seq_angajat.nextval, 'Agache','Maria', 40, TO_DATE('04-10-1982', 'dd-mm-yyyy'),2150, 19);

insert into angajat
values(seq_angajat.nextval, 'Petru','Costel', 35,TO_DATE('04-05-1987', 'dd-mm-yyyy'), 2876, 20);

insert into angajat
values(seq_angajat.nextval, 'Alexandru','Ioana', 25, TO_DATE('10-10-1997', 'dd-mm-yyyy'),1500, 21);

insert into angajat
values(seq_angajat.nextval, 'Ionescu','Carmen', 30,TO_DATE('05-11-1992', 'dd-mm-yyyy'), 2500, 22);

insert into angajat
values(seq_angajat.nextval, 'Pavel','Mirel', 22,TO_DATE('10-12-2000', 'dd-mm-yyyy'), 1458, 23);

insert into angajat
values(seq_angajat.nextval, 'Mitrel','Ionut', 28,TO_DATE('12-09-1994', 'dd-mm-yyyy'), 2480, 24);

insert into angajat
values(seq_angajat.nextval, 'Cordean','Marin', 32,TO_DATE('12-02-1990', 'dd-mm-yyyy'), 1376, 25);

insert into angajat
values(seq_angajat.nextval, 'Ionescu','Alexandra', 34, TO_DATE('04-03-1988', 'dd-mm-yyyy'),2000, 26);

insert into angajat
values(seq_angajat.nextval, 'Petre','Alin', 27,TO_DATE('05-11-1995', 'dd-mm-yyyy'), 2000, 27);

insert into angajat
values(seq_angajat.nextval, 'Cornel','Ioan', 34,TO_DATE('10-10-1988', 'dd-mm-yyyy'), 2657, 28);

insert into angajat
values(seq_angajat.nextval, 'Ion','Ana', 24,TO_DATE('03-04-1998', 'dd-mm-yyyy'), 1500, 29);

insert into angajat
values(seq_angajat.nextval, 'Popescu','Elena', 34, TO_DATE('12-10-1988', 'dd-mm-yyyy'),2150, 30);

commit;


insert into sufera
values(1, 1);

insert into sufera
values(1, 2);

insert into sufera
values(1, 4);

insert into sufera
values(2, 1);

insert into sufera
values(2, 3);

insert into sufera
values(3, 1);

insert into sufera
values(3, 2);

insert into sufera
values(3, 3);

insert into sufera
values(3, 5);

insert into sufera
values(5, 1);

commit;


insert into se_treateaza
values(1, 1);

insert into se_treateaza
values(1, 2);

insert into se_treateaza
values(1, 4);

insert into se_treateaza
values(2, 1);

insert into se_treateaza
values(2, 3);

insert into se_treateaza
values(3, 1);

insert into se_treateaza
values(3, 2);

insert into se_treateaza
values(3, 3);

insert into se_treateaza
values(3, 5);

insert into se_treateaza
values(5, 1);

commit;


insert into mananca
values(1, 1);

insert into mananca
values(1, 12);

insert into mananca
values(1, 4);

insert into mananca
values(2, 10);

insert into mananca
values(2, 3);

insert into mananca
values(3, 9);

insert into mananca
values(3, 11);

insert into mananca
values(3, 2);

insert into mananca
values(3, 12);

insert into mananca
values(5, 10);

commit;


--1
--Afisati numele si numarul de vaccinuri facute ale animalelor
--ce fac parte din centrele de adoptie din navodari
select a.nume, cv.nr_vaccinuri
from carnet_vaccinuri cv join animal a on (cv.id_animal = a.id_animal)
join centru_de_adoptie ca on (a.id_centru = ca.id_centru)
join oras o on ( ca.id_oras = o.id_oras)
where substr(o.nume, 3) = 'vodari';

--join, filtrare la nivel de linii, o functie pe siruri de caractere

--2
--Afisati numele, prenumele si salariul angajatilor care au salariul egal cu salariul cel mai mare al joburilor care 
--fac parte din departamentul cu cele mai putine persoane.
select nume || ' ' || prenume angajat, salariu
from angajat
where salariu = ( select max(j.salariu)
                    from job j join departament d on (j.id_departament = d.id_departament)
                    where d.nr_persoane = (select min(nr_persoane)
                                            from departament));

--2
--Afisati numele centrelor de adoptie, orasele din care fac parte si tara, unde id-ul tarii 
--apartine intervalului 1,7.
select c.nume centru, o.nume oras, t.nume tara
from centru_de_adoptie c join oras o on (c.id_oras = o.id_oras)
join tara t on (o.id_tara = t.id_tara)
where t.nume in (select t2.nume
                from centru_de_adoptie c2 join oras o2 on (c2.id_oras = o2.id_oras)
                join tara t2 on (o2.id_tara = t2.id_tara)                
                where upper(t2.nume)= 'ROMANIA');

--subcerere nesincronizata, a doua functie pe siruri de caractere


--3
--Afisati numele animalelor, numele bolii de care sufera, gravitatea bolii si cate tipuri de hrana mananca pentru
--animalele ale caror varsta este mai mica sau egala cu gravitatea bolii
select a.nume, b.nume, b.gravitate, count(h.nume)
from animal a, sufera s, boala b, mananca m, hrana_animale h
where a.id_animal = s.id_animal and s.id_boala = b.id_boala and a.id_animal = m.id_animal and m.id_hrana = h.id_hrana and
a.varsta in (select b2.gravitate
                from animal a2 join sufera s2 on (a2.id_animal = s2.id_animal)
                join boala b2 on (s2.id_boala = b2.id_boala)
                where b2.gravitate <= a.varsta)
group by a.nume, b.nume, b.gravitate
order by b.gravitate desc;
--subcerere sincronizata, ordonare, grupari de date, functii grup, filtrare la nivel de grupuri

--4
--Afisati numele animalului(in cazul in care nu are, afiseaza "nu are nume"), data urmatorului vaccin, si un mesaj de tipul:
--"Vaccinul trebuie facut" daca data urmatorului vaccin se afla dupa doua luni si 4 zile de la data curenta,
--"Vaccinul trebuie trecut in carnetul de vaccinuri" daca data urmatorului vaccin se afla inainte de doua luni si 4 zile de la data curenta,
--"Este ziua vaccinului" in oricare alt caz. Vor fi afisate aceste lucruri pentru animalele
--care au data urmatorului vaccin dupa ultima zi a lunii curente.
select nvl(a.nume, 'nu are nume'), cv.data_urmatorului_vaccin,
case
when cv.data_urmatorului_vaccin > add_months(sysdate+4, 2) then 'Vaccinul trebuie facut'
when cv.data_urmatorului_vaccin < add_months(sysdate+4, 2) then 'Vaccinul trebuie trecut in carnetul de vaccinuri'
else 'Este ziua vaccinului'
end as mesaj
from animal a join carnet_vaccinuri cv on (a.id_animal = cv.id_animal)
where cv.data_urmatorului_vaccin >= last_day(sysdate);
                                    
--case, 2 functii calendaristice, nvl           
select add_months(sysdate+4, 2)
from dual;

--5

with angajati_putini(valoare) as
(select min(nr_persoane)
from departament)
select a.nume, decode(a.salariu, (select min(salariu) from job), 'Are salariul cel mai mic',
(select max(salariu) from job), 'Are salariul cel mai mare', 
(select avg(salariu) from job), 'Are salariul mediu', 'Nu conteaza salariul')
from angajat a join job j on a.id_job = j.id_job
join departament d on j.id_departament = d.id_departament, angajati_putini
where d.nr_persoane = angajati_putini.valoare;


--decode, bloc cerere, functii grup
with angajati_medii(averageValue) as
(select min(nr_persoane)
from departament)
select d.nume, d.nr_persoane
from departament d, angajati_medii 
where d.nr_persoane = angajati_medii.averageValue;